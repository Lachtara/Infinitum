/*
 * TEST of GIT pushing
 */
package Main;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;
import static javax.swing.SwingConstants.CENTER;
// database imports
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author Lachtara
 */
public class Infinitum extends javax.swing.JFrame {

	/**
	 * Creates new form Infinitum
	 */
	public Infinitum() {
//		this.setUndecorated(rootPaneCheckingEnabled);
		initComponents();
		// set view options
		setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
		setExtendedState(JFrame.MAXIMIZED_BOTH);
		// set background
//		getContentPane().setBackground(Color.black);
		ImageIcon logo = new ImageIcon("D:\\WorkspaceNetbeans\\Infinitum\\src\\Main\\Infinitum_Dark_800x640.jpg");
		lblLogo.setIcon(logo);
		lblLogo.setHorizontalAlignment(CENTER);
		lblLogo.setBackground(Color.BLACK);
//		setContentPane(lblLogo);
		// set 
		pnlMain.setBackground(Color.WHITE);
		layPnlMain.setLayer(lblLogo, 0);
		layPnlMain.setLayer(pnlMain, 1);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layPnlMain = new javax.swing.JLayeredPane();
        pnlMain = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        pnlMenuButtons = new javax.swing.JPanel();
        btnPnlActive = new javax.swing.JButton();
        btnPnlArchive = new javax.swing.JButton();
        btnPnlThree = new javax.swing.JButton();
        pnlScrollContent = new javax.swing.JScrollPane();
        pnlContent = new javax.swing.JPanel();
        pnlActive = new javax.swing.JPanel();
        pnlArchive = new javax.swing.JPanel();
        pnlThree = new javax.swing.JPanel();
        lblPnlThree = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Infinitum");
        setMinimumSize(new java.awt.Dimension(600, 300));

        pnlMain.setOpaque(false);

        pnlMenu.setMinimumSize(new java.awt.Dimension(72, 300));
        pnlMenu.setOpaque(false);
        pnlMenu.setLayout(new java.awt.GridBagLayout());

        pnlMenuButtons.setOpaque(false);
        pnlMenuButtons.setPreferredSize(new java.awt.Dimension(255, 470));
        pnlMenuButtons.setLayout(new java.awt.GridLayout(3, 1, 0, 10));

        btnPnlActive.setText("Active Chars");
        btnPnlActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlActiveActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlActive);

        btnPnlArchive.setText("Archive");
        btnPnlArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlArchiveActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlArchive);

        btnPnlThree.setText("jButton3");
        btnPnlThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlThreeActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlThree);

        pnlMenu.add(pnlMenuButtons, new java.awt.GridBagConstraints());

        pnlScrollContent.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pnlContent.setLayout(new java.awt.CardLayout());

        pnlActive.setBackground(new java.awt.Color(240, 134, 28));
        pnlActive.setLayout(new java.awt.GridBagLayout());
        getActive();
        pnlContent.add(pnlActive, "pnlActive");

        pnlArchive.setLayout(new java.awt.GridBagLayout());
        getArchive();
        pnlContent.add(pnlArchive, "pnlArchive");

        lblPnlThree.setText("pnlThree");

        javax.swing.GroupLayout pnlThreeLayout = new javax.swing.GroupLayout(pnlThree);
        pnlThree.setLayout(pnlThreeLayout);
        pnlThreeLayout.setHorizontalGroup(
            pnlThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThreeLayout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(lblPnlThree)
                .addContainerGap(466, Short.MAX_VALUE))
        );
        pnlThreeLayout.setVerticalGroup(
            pnlThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThreeLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(lblPnlThree)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        pnlContent.add(pnlThree, "pnlThree");

        pnlScrollContent.setViewportView(pnlContent);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlScrollContent, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlScrollContent, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblLogo.setBackground(new java.awt.Color(0, 0, 0));
        lblLogo.setMaximumSize(new java.awt.Dimension(2, 2));
        lblLogo.setMinimumSize(new java.awt.Dimension(2, 2));
        lblLogo.setOpaque(true);
        lblLogo.setPreferredSize(new java.awt.Dimension(2, 2));

        layPnlMain.setLayer(pnlMain, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layPnlMain.setLayer(lblLogo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layPnlMainLayout = new javax.swing.GroupLayout(layPnlMain);
        layPnlMain.setLayout(layPnlMainLayout);
        layPnlMainLayout.setHorizontalGroup(
            layPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE))
        );
        layPnlMainLayout.setVerticalGroup(
            layPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layPnlMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layPnlMain, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void getActive() {
		pnlActive.removeAll();
		ResultSet result1 = DB.getActive();
        if (result1 == null) {
            JLabel warningNull = new JLabel();
            warningNull.setText("No Entries yet");
            pnlActive.add(warningNull, new java.awt.GridBagConstraints());
        } else {
            try {
                for (int gridy = 0; result1.next(); gridy++) {
                    PanelCharacterTile pnlCharTile = new PanelCharacterTile();
                    // set view
                    String name = "pnlCharTile" + Integer.toString(result1.getInt("ID"));
                    pnlCharTile.ID = result1.getInt("ID");
                    pnlCharTile.setName(name);
                    pnlCharTile.setActiveSelected(result1.getBoolean("Active"));
                    pnlCharTile.setLblCharname(result1.getString("Char_Firstname") + " " + result1.getString("Char_Lastname"));
                    pnlCharTile.setLblRealname(result1.getString("Real_Firstname") + " " + result1.getString("Real_Lastname"));
                    // layout constraints
                    GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = gridy;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    pnlActive.add(pnlCharTile, gridBagConstraints);
                    gridy++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
	}
	
	private void getArchive() {
		pnlArchive.removeAll();
		ResultSet result2 = DB.getAll();
        if (result2 == null) {
            JLabel warningNull = new JLabel();
            warningNull.setText("No Entries yet");
            pnlArchive.add(warningNull, new java.awt.GridBagConstraints());
        } else {
            try {
                for (int gridy = 0; result2.next(); gridy++) {
                    PanelCharacterTile pnlCharTile = new PanelCharacterTile();
                    // set view
                    String name = "pnlCharTile" + Integer.toString(result2.getInt("ID"));
                    pnlCharTile.ID = result2.getInt("ID");
                    pnlCharTile.setName(name);
                    pnlCharTile.setActiveSelected(result2.getBoolean("Active"));
                    pnlCharTile.setLblCharname(result2.getString("Char_Firstname") + " " + result2.getString("Char_Lastname"));
                    pnlCharTile.setLblRealname(result2.getString("Real_Firstname") + " " + result2.getString("Real_Lastname"));
                    // layout constraints
                    GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = gridy;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    pnlArchive.add(pnlCharTile, gridBagConstraints);
                    gridy++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
            }
		}
	}
	
    private void btnPnlActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlActiveActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlActive");
		getActive();
    }//GEN-LAST:event_btnPnlActiveActionPerformed

    private void btnPnlArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlArchiveActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlArchive");
		getArchive();
    }//GEN-LAST:event_btnPnlArchiveActionPerformed

    private void btnPnlThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlThreeActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlThree");
    }//GEN-LAST:event_btnPnlThreeActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		
		/* automatically start server 
		Server.Builder builder = new Server.Builder("test");
		Server server = builder.build();
		server.createPort(1527);
		server.start();
		*/

		// connect to Database
		String host = "jdbc:derby://localhost:1527/InfinitumDB";
		String username = "MainUser";
		String password = "test";
		
		try {
			DB.con = DriverManager.getConnection(host, username, password);
		} catch (SQLException ex) {
			Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
		}
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
        //-- prevents the gui from looking different depending on OS
		setDefaultLookAndFeelDecorated(true);
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Infinitum().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPnlActive;
    private javax.swing.JButton btnPnlArchive;
    private javax.swing.JButton btnPnlThree;
    private javax.swing.JLayeredPane layPnlMain;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblPnlThree;
    private javax.swing.JPanel pnlActive;
    private javax.swing.JPanel pnlArchive;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMenuButtons;
    private javax.swing.JScrollPane pnlScrollContent;
    private javax.swing.JPanel pnlThree;
    // End of variables declaration//GEN-END:variables
}

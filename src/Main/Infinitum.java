/*
 * TEST of GIT pushing
 */
package Main;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;
import static javax.swing.SwingConstants.CENTER;
// database imports
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author Lachtara
 */
public class Infinitum extends javax.swing.JFrame {

	/**
	 * Creates new form Infinitum
	 */
	public Infinitum() {
//		this.setUndecorated(rootPaneCheckingEnabled);
		initComponents();
		// set view options
		setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
		setExtendedState(JFrame.MAXIMIZED_BOTH);
		// set background
//		getContentPane().setBackground(Color.black);
		ImageIcon logo = new ImageIcon("D:\\WorkspaceNetbeans\\Infinitum\\src\\Main\\Infinitum_Dark_339x144.png");
		lblLogo.setIcon(logo);
		lblLogo.setHorizontalAlignment(CENTER);
		lblLogo.setBackground(Color.BLACK);
//		setContentPane(lblLogo);
		// set 
		pnlMain.setBackground(Color.WHITE);
		layPnlMain.setLayer(lblLogo, 0);
		layPnlMain.setLayer(pnlFillerMain, 0);
		layPnlMain.setLayer(pnlMain, 1);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        layPnlMain = new javax.swing.JLayeredPane();
        pnlMain = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        pnlMenuButtons = new javax.swing.JPanel();
        btnPnlHome = new javax.swing.JButton();
        btnPnlActive = new javax.swing.JButton();
        btnPnlArchive = new javax.swing.JButton();
        pnlContent = new javax.swing.JPanel();
        pnlHome = new javax.swing.JPanel();
        lblHeadline = new javax.swing.JLabel();
        pnlActive = new javax.swing.JPanel();
        pnlSidebarActive = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pnlScrollTileActive = new javax.swing.JScrollPane();
        pnlTileActive = new javax.swing.JPanel();
        pnlArchive = new javax.swing.JPanel();
        pnlScrollTileArchive = new javax.swing.JScrollPane();
        pnlTileArchive = new javax.swing.JPanel();
        pnlSidebarArchive = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        pnlFillerMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Infinitum");
        setMinimumSize(new java.awt.Dimension(600, 300));

        layPnlMain.setLayout(new java.awt.GridBagLayout());

        pnlMain.setOpaque(false);
        pnlMain.setLayout(new java.awt.GridBagLayout());

        pnlMenu.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white));
        pnlMenu.setMaximumSize(new java.awt.Dimension(125, 2147483647));
        pnlMenu.setMinimumSize(new java.awt.Dimension(125, 300));
        pnlMenu.setName(""); // NOI18N
        pnlMenu.setOpaque(false);
        pnlMenu.setPreferredSize(new java.awt.Dimension(125, 300));
        pnlMenu.setLayout(new java.awt.GridBagLayout());

        pnlMenuButtons.setOpaque(false);
        pnlMenuButtons.setPreferredSize(new java.awt.Dimension(255, 470));
        pnlMenuButtons.setLayout(new java.awt.GridLayout(3, 1, 0, 10));

        btnPnlHome.setText("Home");
        btnPnlHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlHomeActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlHome);

        btnPnlActive.setText("Active Chars");
        btnPnlActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlActiveActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlActive);

        btnPnlArchive.setText("Archive");
        btnPnlArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnlArchiveActionPerformed(evt);
            }
        });
        pnlMenuButtons.add(btnPnlArchive);

        pnlMenu.add(pnlMenuButtons, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        pnlMain.add(pnlMenu, gridBagConstraints);

        pnlContent.setMaximumSize(null);
        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.CardLayout());

        pnlHome.setOpaque(false);

        lblHeadline.setBackground(java.awt.Color.black);
        lblHeadline.setFont(new java.awt.Font("Ubuntu", 1, 48)); // NOI18N
        lblHeadline.setForeground(java.awt.Color.white);
        lblHeadline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeadline.setText("Welcome to...");
        lblHeadline.setOpaque(true);

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeadline, javax.swing.GroupLayout.DEFAULT_SIZE, 1459, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeadline, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlContent.add(pnlHome, "pnlHome");

        pnlActive.setBackground(new java.awt.Color(240, 134, 28));
        pnlActive.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        jButton3.setText("jButton2");

        javax.swing.GroupLayout pnlSidebarActiveLayout = new javax.swing.GroupLayout(pnlSidebarActive);
        pnlSidebarActive.setLayout(pnlSidebarActiveLayout);
        pnlSidebarActiveLayout.setHorizontalGroup(
            pnlSidebarActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSidebarActiveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSidebarActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSidebarActiveLayout.setVerticalGroup(
            pnlSidebarActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSidebarActiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(352, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 1.0;
        pnlActive.add(pnlSidebarActive, gridBagConstraints);

        pnlScrollTileActive.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        pnlScrollTileActive.setMinimumSize(new java.awt.Dimension(400, 100));
        pnlScrollTileActive.setName(""); // NOI18N
        pnlScrollTileActive.setPreferredSize(new java.awt.Dimension(400, 100));

        pnlTileActive.setLayout(new java.awt.GridBagLayout());
        getActive();
        pnlScrollTileActive.setViewportView(pnlTileActive);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        pnlActive.add(pnlScrollTileActive, gridBagConstraints);

        pnlContent.add(pnlActive, "pnlActive");

        pnlArchive.setLayout(new java.awt.GridBagLayout());
        getArchive();

        pnlScrollTileArchive.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        pnlScrollTileArchive.setMinimumSize(new java.awt.Dimension(400, 100));
        pnlScrollTileArchive.setName(""); // NOI18N
        pnlScrollTileArchive.setPreferredSize(new java.awt.Dimension(400, 100));

        pnlTileArchive.setLayout(new java.awt.GridBagLayout());
        getActive();
        pnlScrollTileArchive.setViewportView(pnlTileArchive);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlArchive.add(pnlScrollTileArchive, gridBagConstraints);

        jButton4.setText("jButton1");

        jButton5.setText("jButton2");

        jButton6.setText("jButton2");

        javax.swing.GroupLayout pnlSidebarArchiveLayout = new javax.swing.GroupLayout(pnlSidebarArchive);
        pnlSidebarArchive.setLayout(pnlSidebarArchiveLayout);
        pnlSidebarArchiveLayout.setHorizontalGroup(
            pnlSidebarArchiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSidebarArchiveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSidebarArchiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSidebarArchiveLayout.setVerticalGroup(
            pnlSidebarArchiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSidebarArchiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlArchive.add(pnlSidebarArchive, gridBagConstraints);

        pnlContent.add(pnlArchive, "pnlArchive");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 165;
        gridBagConstraints.ipady = 327;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 12);
        pnlMain.add(pnlContent, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        layPnlMain.add(pnlMain, gridBagConstraints);

        lblLogo.setBackground(new java.awt.Color(0, 0, 0));
        lblLogo.setMaximumSize(new java.awt.Dimension(2, 2));
        lblLogo.setMinimumSize(new java.awt.Dimension(2, 2));
        lblLogo.setOpaque(true);
        lblLogo.setPreferredSize(new java.awt.Dimension(2, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 820;
        gridBagConstraints.ipady = 492;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        layPnlMain.add(lblLogo, gridBagConstraints);

        pnlFillerMain.setBackground(java.awt.Color.black);
        pnlFillerMain.setMinimumSize(new java.awt.Dimension(149, 5));
        pnlFillerMain.setName(""); // NOI18N
        pnlFillerMain.setPreferredSize(new java.awt.Dimension(149, 5));

        javax.swing.GroupLayout pnlFillerMainLayout = new javax.swing.GroupLayout(pnlFillerMain);
        pnlFillerMain.setLayout(pnlFillerMainLayout);
        pnlFillerMainLayout.setHorizontalGroup(
            pnlFillerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlFillerMainLayout.setVerticalGroup(
            pnlFillerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        layPnlMain.add(pnlFillerMain, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layPnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1644, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layPnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void getActive() {
		pnlTileActive.removeAll();
		ResultSet result1 = DB.getActive();
        if (result1 == null) {
            JLabel warningNull = new JLabel();
            warningNull.setText("No Entries yet");
            pnlTileActive.add(warningNull, new java.awt.GridBagConstraints());
        } else {
            try {
                for (int gridy = 0; result1.next(); gridy++) {
                    PanelCharacterTile pnlCharTile = new PanelCharacterTile();
                    // set view
                    String name = "pnlCharTile" + Integer.toString(result1.getInt("ID"));
                    pnlCharTile.ID = result1.getInt("ID");
                    pnlCharTile.setName(name);
                    pnlCharTile.setActiveSelected(result1.getBoolean("Active"));
					// both null
					if ((result1.getString("Char_Lastname") == null) && (result1.getString("Char_Alias") == null)) {
						pnlCharTile.setLblCharname(result1.getString("Char_Firstname"));
					// lastname null
					} else if ((result1.getString("Char_Lastname") == null) && !(result1.getString("Char_Alias") == null)) {
							pnlCharTile.setLblCharname(result1.getString("Char_Firstname") + " '" + result1.getString("Char_Alias") + "'");
					// alias null
					} else if (!(result1.getString("Char_Lastname") == null) && (result1.getString("Char_Alias") == null)) {
						pnlCharTile.setLblCharname(result1.getString("Char_Firstname") + " " + result1.getString("Char_Lastname"));
					// none null
					} else {
						pnlCharTile.setLblCharname(result1.getString("Char_Firstname") + " '" + result1.getString("Char_Alias") + "' " + result1.getString("Char_Lastname"));
					}
                    
                    pnlCharTile.setLblRealname(result1.getString("Real_Name"));
                    // layout constraints
                    GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = gridy;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    pnlTileActive.add(pnlCharTile, gridBagConstraints);
                    gridy++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
	}
	
	private void getArchive() {
		pnlTileArchive.removeAll();
		ResultSet result2 = DB.getAll();
        if (result2 == null) {
            JLabel warningNull = new JLabel();
            warningNull.setText("No Entries yet");
            pnlTileArchive.add(warningNull, new java.awt.GridBagConstraints());
        } else {
            try {
                for (int gridy = 0; result2.next(); gridy++) {
                    PanelCharacterTile pnlCharTile = new PanelCharacterTile();
                    // set view
                    String name = "pnlCharTile" + Integer.toString(result2.getInt("ID"));
                    pnlCharTile.ID = result2.getInt("ID");
                    pnlCharTile.setName(name);
                    pnlCharTile.setActiveSelected(result2.getBoolean("Active"));
                    // both null
					if ((result2.getString("Char_Lastname") == null) && (result2.getString("Char_Alias") == null)) {
						pnlCharTile.setLblCharname(result2.getString("Char_Firstname"));
					// lastname null
					} else if ((result2.getString("Char_Lastname") == null) && !(result2.getString("Char_Alias") == null)) {
							pnlCharTile.setLblCharname(result2.getString("Char_Firstname") + " '" + result2.getString("Char_Alias") + "'");
					// alias null
					} else if (!(result2.getString("Char_Lastname") == null) && (result2.getString("Char_Alias") == null)) {
						pnlCharTile.setLblCharname(result2.getString("Char_Firstname") + " " + result2.getString("Char_Lastname"));
					// none null
					} else {
						pnlCharTile.setLblCharname(result2.getString("Char_Firstname") + " '" + result2.getString("Char_Alias") + "' " + result2.getString("Char_Lastname"));
					}
                    pnlCharTile.setLblRealname(result2.getString("Real_Name"));
                    // layout constraints
                    GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
                    gridBagConstraints.gridx = 0;
                    gridBagConstraints.gridy = gridy;
                    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
                    gridBagConstraints.weightx = 1.0;
                    gridBagConstraints.weighty = 1.0;
                    pnlTileArchive.add(pnlCharTile, gridBagConstraints);
                    gridy++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
            }
		}
	}
	
    private void btnPnlActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlActiveActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlActive");
		getActive();
    }//GEN-LAST:event_btnPnlActiveActionPerformed

    private void btnPnlArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlArchiveActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlArchive");
		getArchive();
    }//GEN-LAST:event_btnPnlArchiveActionPerformed

    private void btnPnlHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnlHomeActionPerformed
        CardLayout card = (CardLayout)pnlContent.getLayout();
		card.show(pnlContent, "pnlHome");
    }//GEN-LAST:event_btnPnlHomeActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		
		/* automatically start server 
		Server.Builder builder = new Server.Builder("test");
		Server server = builder.build();
		server.createPort(1527);
		server.start();
		*/

		// connect to Database
		String host = "jdbc:derby://localhost:1527/InfinitumDB";
		String username = "MainUser";
		String password = "test";
		
		try {
			DB.con = DriverManager.getConnection(host, username, password);
		} catch (SQLException ex) {
			Logger.getLogger(DB.class.getName()).log(Level.SEVERE, null, ex);
		}
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Infinitum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
        //-- prevents the gui from looking different depending on OS
		setDefaultLookAndFeelDecorated(true);
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Infinitum().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPnlActive;
    private javax.swing.JButton btnPnlArchive;
    private javax.swing.JButton btnPnlHome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLayeredPane layPnlMain;
    private javax.swing.JLabel lblHeadline;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JPanel pnlActive;
    private javax.swing.JPanel pnlArchive;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlFillerMain;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMenuButtons;
    private javax.swing.JScrollPane pnlScrollTileActive;
    private javax.swing.JScrollPane pnlScrollTileArchive;
    private javax.swing.JPanel pnlSidebarActive;
    private javax.swing.JPanel pnlSidebarArchive;
    private javax.swing.JPanel pnlTileActive;
    private javax.swing.JPanel pnlTileArchive;
    // End of variables declaration//GEN-END:variables
}
